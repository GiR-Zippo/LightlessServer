services:
  postgres:
    image: postgres:latest
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    ports:
      - 5432:5432/tcp
    environment:
      POSTGRES_DB: -DB NAME HERE-
      POSTGRES_USER: -USER HERE-
      POSTGRES_PASSWORD: -PASS HERE-
    volumes:
      - ../data/postgresql/:/var/lib/postgresql/data
      - postgres_socket:/var/run/postgresql:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U -USER HERE-"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    command: [sh, -c, "rm -f /data/dump.rdb && redis-server --save \"\" --appendonly no --requirepass -PASS HERE-"]
    volumes:
      - cache:/data

  lightless-server:
    image: lightless/server:local
    restart: on-failure
    ports:
      - 6000:6000/tcp
      - 6050:6050/tcp
    environment:
      LightlessSync__CdnFullUrl: "${DEV_LIGHTLESS_CDNURL}"
      LightlessSync__XIVAPIKey: "${DEV_LIGHTLESS_XIVAPIKEY}"
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/server-standalone.json:/opt/LightlessSyncServer/appsettings.json
      - ../log/server-standalone/:/opt/LightlessSyncServer/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6000/health || exit 1"]
      retries: 60
      start_period: 10s
      timeout: 1s

  lightless-auth:
    image: lightless/auth:local
    restart: on-failure
    environment:
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/authservice-standalone.json:/opt/LightlessSyncAuthService/appsettings.json
      - ../log/authservice-standalone/:/opt/LightlessSyncAuthService/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      lightless-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  lightless-services:
    image: lightless/services:local
    restart: on-failure
    environment:
      LightlessSync__DiscordBotToken: "${DEV_LIGHTLESS_DISCORDTOKEN}"
      LightlessSync__DiscordChannelForMessages: "${DEV_LIGHTLESS_DISCORDCHANNEL}"
      LightlessSync__DiscordChannelForReports: "${DEV_LIGHTLESS_DISCORDCHANNEL}"
      LightlessSync__DiscordChannelForCommands: "${DEV_LIGHTLESS_DISCORDCHANNEL}"
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/services-standalone.json:/opt/LightlessSyncServices/appsettings.json
      - ../log/services-standalone/:/opt/LightlessSyncServices/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
    depends_on:
      lightless-server:
        condition: service_healthy
      postgres:
        condition: service_healthy

  lightless-files:
    image: lightless/files:local
    ports:
      - 6200:6200/tcp
    restart: on-failure
    environment:
      LightlessSync__CdnFullUrl: "${DEV_LIGHTLESS_CDNURL}"
      DOTNET_USE_POLLING_FILE_WATCHER: 1
    volumes:
      - ../config/standalone/files-standalone.json:/opt/LightlessSyncStaticFilesServer/appsettings.json
      - ../log/files-standalone/:/opt/LightlessSyncStaticFilesServer/logs/:rw
      - postgres_socket:/var/run/postgresql/:rw
      - ../data/files-standalone/:/lightlesscache/:rw
    depends_on:
      postgres:
        condition: service_healthy
      lightless-server:
        condition: service_healthy

volumes:
  postgres_socket:
  cache:
    driver: local